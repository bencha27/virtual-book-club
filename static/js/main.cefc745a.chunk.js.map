{"version":3,"sources":["utils/auth.js","components/Navbar.js","pages/Home.js","utils/mutations.js","pages/Signup.js","utils/helpers.js","pages/Login.js","utils/queries.js","components/PostList.js","pages/User.js","pages/Posts.js","pages/PostSingle.js","pages/PostForm.js","App.js","index.js"],"names":["AuthService","_classCallCheck","_createClass","key","value","idToken","localStorage","setItem","window","location","assign","getItem","token","decode","exp","Date","now","removeItem","this","getToken","isTokenExpired","Navbar","_jsx","className","children","_jsxs","Link","to","id","Auth","loggedIn","_Fragment","onClick","event","preventDefault","logout","Home","CREATE_USER","gql","_templateObject","_taggedTemplateLiteral","LOGIN_USER","_templateObject2","CREATE_POST","_templateObject3","_templateObject4","_templateObject5","Signup","_useState","useState","email","username","password","_useState2","_slicedToArray","formState","setFormState","_useState3","_useState4","errorMessage","setErrorMessage","_useMutation","useMutation","_useMutation2","createUser","_useMutation2$","error","navigate","data","useNavigate","handleInputChange","_event$target","target","name","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$createUser","_data","wrap","_context","prev","next","test","String","toLowerCase","abrupt","match","variables","sent","login","t0","console","alert","concat","stop","_x","apply","arguments","onSubmit","for","type","onChange","Login","props","_yield$login","message","QUERY_POSTS","QUERY_SINGLE_POST","QUERY_SINGLE_USER","QUERY_ME","PostList","posts","length","map","post","postTitle","user","_id","style","float","Number","parseInt","createdAt","toDateString","postBody","substring","User","userId","useParams","_useQuery","useQuery","loading","me","getUser","Navigate","Posts","allPosts","PostSingle","postId","PostForm","createPost","_yield$createPost","rows","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cefc745a.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\nclass AuthService {\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/me\");\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    return false;\n  }\n  \n  getUser() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nexport default function Navbar() {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary data-bs-theme='dark' mb-3\">\n      <div className=\"container-lg\">\n        {/* <a className=\"navbar-brand\" href=\"#\">Navbar</a> */}\n        {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button> */}\n        <Link to=\"/\" className=\"navbar-brand fw-bold fs-2\">Virtual Book Club</Link>\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            {Auth.loggedIn() ? (\n              <>\n                <Link to=\"/me\" className=\"nav-link fs-5 px-4\">My Account</Link>\n                <Link to=\"/create\" className=\"nav-link fs-5 px-4\">Create a Post</Link>\n                <Link to=\"/posts\" className=\"nav-link fs-5 px-4\">View Posts</Link>\n                <Link to=\"/\" className=\"nav-link fs-5 px-4\" onClick={logout}>Log Out</Link>\n              </>\n            ) : (\n              <>\n                <Link to=\"/signup\" className=\"nav-link fs-5 px-4\">Sign Up</Link>\n                <Link to=\"/login\" className=\"nav-link fs-5 px-4\">Log In</Link>\n                <Link to=\"/posts\" className=\"nav-link fs-5 px-4\">View Posts</Link>\n              </>\n            )}\n\n            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n            <a className=\"nav-link\" href=\"#\">Sign Up</a>\n            <a className=\"nav-link\" href=\"#\">Create a Post</a>\n            <a className=\"nav-link\" href=\"#\">View Posts</a> */}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}","import React from 'react';\n\nexport default function Home() {\n  return (\n    <div className=\"container-md\">\n      {/* Header */}\n      <div className=\"row text-center\">\n        <h1 className=\"my-5\">Virtual Book Club</h1>\n      </div>\n\n      <div className=\"row text-center my-3\">\n        <p className=\"fs-3 fw-light lh-1\">An online community where we</p>\n        <p className=\"fs-3 fw-light lh-1\">share, connect, and learn with others</p>\n        <p className=\"fs-3 fw-light lh-1\">in our love of books</p>\n      </div>\n\n      <div className=\"row text-center my-5\">\n        <p className=\"fs-3 fw-lighter\">Click on one of the links above to get started!</p>\n      </div>\n\n    </div>\n\n  );\n}","import { gql } from \"@apollo/client\";\n\nexport const CREATE_USER = gql`\n  mutation createUser($email: String!, $username: String!, $password: String!) {\n    createUser(email: $email, username: $username, password: $password) {\n      token\n      user{\n      _id\n      username\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n  mutation deleteUser($userId: ID!) {\n    deleteUser(userId: $userId) {\n      _id\n      username\n    }\n  }\n`;\n\nexport const CREATE_POST = gql`\n  mutation createPost($userId: ID!, $postTitle: String!, $postBody: String!) {\n    createPost(userId: $userId, postTitle: $postTitle, postBody: $postBody) {\n      _id\n      user {\n        _id\n        username\n      }\n      postTitle\n      postBody\n    }\n  }\n`;\n\nexport const DELETE_POST = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId) {\n      _id\n      postTitle\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { validateEmail, validatePassword } from \"../utils/helpers\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nexport default function Signup() {\n  // Declare state variables for form inputs\n  const [formState, setFormState] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [createUser, { error, data }] = useMutation(CREATE_USER);\n\n  const navigate = useNavigate();\n\n  // Function to handle changes in input fields\n  const handleInputChange = (event) => {\n    // Get the value and name of the input which triggered the change\n    const { name, value } = event.target;\n    \n    // Update input state variables\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // Function to handle form submission\n  const handleFormSubmit = async (event) => {\n    // Preventing the default behavior of the form submit (page refresh)\n    event.preventDefault();\n\n    // If the \"email\" input is not valid OR there is no \"username\" input\n    if (!validateEmail(formState.email) || !formState.username) {\n      // Set the error message\n      setErrorMessage(\"Email or username is invalid. Please try again.\");\n      // Exit out of this code block if something is wrong so that the user can correct it\n      return;\n    }\n\n    // If the \"password\" input is not valid\n    if (!validatePassword(formState.password)) {\n      // Set the error message\n      setErrorMessage(\n        \"Password did not meet the requirements. Please try again.\"\n      );\n      return;\n    }\n\n    try {\n      const { data } = await createUser({\n        variables: { ...formState },\n      });\n      Auth.login(data.createUser.token);\n    } catch(err) {\n      console.error(err);\n    }\n\n    // Display an alert with a greeting\n    alert(`Welcome to the club, ${formState.username}!`);\n\n    // If all the input values are valid, clear out the input fields after registration.\n    setFormState({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n    })\n\n    // Render \"/me\"\n    navigate(\"/me\");\n  };\n\n  return (\n    <div className=\"container-md\">\n      {/* Header */}\n      <div className=\"row text-center\">\n        <h1>Sign Up</h1>\n      </div>\n\n      {/* Form */}\n      <div className=\"row justify-content-center\">\n        <form className=\"col-md-6\" onSubmit={handleFormSubmit}>\n          {/* Email */}\n          <div className=\"mb-3\">\n            <label for=\"inputEmail\" className=\"form-label\">Email address</label>\n            <input type=\"email\" className=\"form-control\" id=\"inputEmail\"\n              name=\"email\" value={formState.email} onChange={handleInputChange}/>\n          </div>\n\n          {/* Username */}\n          <div className=\"mb-3\">\n            <label for=\"inputUsername\" className=\"form-label\">Username</label>\n            <input type=\"text\" className=\"form-control\" id=\"inputUsername\"\n              name=\"username\" value={formState.username} onChange={handleInputChange}/>\n          </div>\n\n          {/* Password */}\n          <div className=\"mb-3\">\n            <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n            <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n              name=\"password\" value={formState.password} onChange={handleInputChange}\n              aria-describedby=\"passwordHelpBlock\"/>\n            <div id=\"passwordHelpBlock\" className=\"form-text\">\n              Your password must be at least 8 characters long, contain uppercase and lower letters and numbers, and must not contain spaces, special characters, or emoji.\n            </div>\n          </div>\n\n          {/* Submit button */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit</button>\n        </form>\n\n        {errorMessage && (\n          <div className=\"row text-center my-3\">\n            <p className=\"error-text text-danger\">{errorMessage}</p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"row text-center my-3\">\n            <p className=\"error-text text-danger\">Something went wrong...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","export function validateEmail(email) {\n  const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n  return regex.test(String(email).toLowerCase());\n}\n\nexport function validatePassword(password) {\n  const regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n  if (password.match(regex)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nexport default function Login(props) {\n  // Declare state variables for form inputs\n  const [formState, setFormState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // Function to handle changes in input fields\n  const handleInputChange = (event) => {\n    // Get the value and name of the input which triggered the change\n    const { name, value } = event.target;\n    \n    // Update input state variables\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // Function to handle form submission\n  const handleFormSubmit = async (event) => {\n    // Preventing the default behavior of the form submit (page refresh)\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      Auth.login(data.login.token);\n    } catch(err) {\n      console.error(err);\n    }\n\n    // Display an alert with a greeting\n    alert(`Welcome back, ${formState.username}!`);\n\n    // If all the input values are valid, clear out the input fields after registration.\n    setFormState({\n      username: \"\",\n      password: \"\",\n    })\n\n    // return <Navigate to=\"/me\" replace={true} />;\n  };\n\n  return (\n    <div className=\"container-md\">\n      {/* Header */}\n      <div className=\"row text-center\">\n        <h1>Log In</h1>\n      </div>\n\n      {/* Form */}\n      <div className=\"row justify-content-center\">\n        <form className=\"col-md-6\" onSubmit={handleFormSubmit}>\n          {/* Username */}\n          <div className=\"mb-3\">\n            <label for=\"inputUsername\" className=\"form-label\">Username</label>\n            <input type=\"text\" className=\"form-control\" id=\"inputUsername\"\n              name=\"username\" value={formState.username} onChange={handleInputChange}/>\n          </div>\n\n          {/* Password */}\n          <div className=\"mb-3\">\n            <label for=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n            <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n              name=\"password\" value={formState.password} onChange={handleInputChange}\n            />\n          </div>\n\n          {/* Submit button */}\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit</button>\n        </form>\n\n        {error && (\n          <div className=\"row text-center my-3\">\n            <p className=\"error-text text-danger\">{error.message}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USERS = gql`\n  query allUsers {\n    users {\n      _id\n      username\n      email\n      password\n      posts\n    }\n  }\n`;\n\nexport const QUERY_POSTS = gql`\n  query allPosts {\n    allPosts {\n      _id\n      user {\n        _id\n        username\n      }\n      postTitle\n      postBody\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_POST = gql`\n  query singlePost($postId: ID!) {\n    post(postId: $postId) {\n      _id\n      user {\n        _id\n        username\n      }\n      postTitle\n      postBody\n      createdAt\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_USER = gql`\n  query singleUser($userId: ID!) {\n    user(userId: $userId) {\n      _id\n      username\n      email\n      password\n      posts {\n        _id\n        postTitle\n        postBody\n        createdAt\n        user {\n          _id\n          username\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      posts {\n        _id\n        postTitle\n        postBody\n        createdAt\n        user {\n          _id\n          username\n        }\n      }\n    }\n  }\n`;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default function PostList({ posts }) {\n  if (!posts.length) {\n    return <h4 className=\"offset-1 text-muted\">No posts</h4>;\n  }\n\n  return (\n    <div>\n      <div className=\"row justify-content-center\">\n        {posts && \n          posts.map((post) => (\n            <div key={post._id} className=\"col-md-10\">\n              <div className=\"card mb-3\" >\n                <div className=\"card-header\">\n                  <h4 className=\"card-title\">{post.postTitle}</h4>\n                  <h5 className=\"card-subtitle text-muted\">\n                    By <Link to={`/user/${post.user._id}`}>{post.user.username}</Link>\n                  <span style={{ float: \"right\" }}>\n                      {`${new Date(Number.parseInt(post.createdAt)).toDateString()}`}\n                  </span>\n                  </h5>\n                </div>\n                <div className=\"card-body\">\n                  {post.postBody.length > 500 ? (\n                    <p className=\"card-text\">{`${post.postBody.substring(0, 500)}...`}</p>\n                  ) : (\n                    <p>{post.postBody}</p>\n                  )}\n                  <Link to={`/posts/${post._id}`}>View post</Link>\n                </div>\n              </div>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport { Navigate, useParams, Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\nimport PostList from \"../components/PostList\";\n\nexport default function User() {\n  const { userId } = useParams();\n\n  const { loading, data } = useQuery(\n    userId ? QUERY_SINGLE_USER : QUERY_ME,\n    { variables: { userId: userId }}\n  );\n\n  const user = data?.me || data?.user || {};\n\n  if (Auth.loggedIn() && Auth.getUser().data._id === userId) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  if (!user?.username) {\n    return (\n      <div className=\"container-md\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10\">\n            <h4 className=\"text-center\">\n              You need to be logged in to see your page. Use the navigation links above to sign up or log in.\n            </h4>\n          </div>  \n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container-md\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-10\">\n          <h2 className=\"text-center mb-4\">My Account</h2>\n          <h3 className=\"text-start offset-1\">My posts</h3>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <PostList posts={user.posts} />\n          )}\n        </div>\n      </div>\n    </div>\n\n  );\n}","import React from 'react';\nimport PostList from \"../components/PostList\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_POSTS } from \"../utils/queries\";\n\nexport default function Posts() {\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const posts = data?.allPosts || [];\n\n  return (\n    <div className=\"container-md\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-10\">\n          <h2 className=\"text-center mb-4\">Recent Posts</h2>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <PostList posts={posts} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_SINGLE_POST } from \"../utils/queries\";\n\nexport default function PostSingle() {\n  const { postId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\n    variables: { postId: postId }\n  });\n\n  const post = data?.post || {};\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"container-md\">\n      <div className=\"row justify-content-center\">\n        <div key={post._id} className=\"col-md-8\">\n          <div className=\"card mb-3\" >\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">{post.postTitle}</h3>\n              <h5 className=\"card-subtitle text-muted\">\n                By <Link to={`/user/${post.user._id}`}>{post.user.username}</Link>\n                <span style={{ float: \"right\" }}>\n                  {`${new Date(Number.parseInt(post.createdAt)).toDateString()}`}\n                </span>\n              </h5>\n            </div>\n            <div className=\"card-body\">\n              <p>{post.postBody}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { redirect } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_POST } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nexport default function PostForm() {\n  const [formState, setFormState] = useState({\n    postTitle: \"\",\n    postBody: \"\",\n  });\n\n  const userId = Auth.getUser().data._id;\n\n  const [createPost, { error, data }] = useMutation(CREATE_POST);\n\n  const handleInputChange = (event) => {\n    // Get the value and name of the input which triggered the change\n    const { name, value } = event.target;\n    \n    // Update input state variables\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createPost({\n        variables: { userId, ...formState },\n      });\n      setFormState({\n        postTitle: \"\",\n        postBody: \"\",\n      });\n      window.location.assign(`/me`);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <div className=\"container-md\">\n      {/* Header */}\n      <div className=\"row text-center\">\n        <h1>Create a post</h1>\n      </div>\n\n      {/* Form */}\n      <div className=\"row justify-content-center\">\n        <form className=\"col-md-6\" onSubmit={handleFormSubmit}>\n          {/* Book title */}\n          <div className=\"mb-3\">\n            <label for=\"inputBookTitle\" className=\"form-label\">Post title</label>\n            <input type=\"text\" className=\"form-control\" id=\"inputBookTitle\" \n              name=\"postTitle\" value={formState.postTitle} onChange={handleInputChange} />\n          </div>\n\n          {/* Book author */}\n          {/* <div className=\"mb-3\">\n            <label for=\"inputBookAuthor\" className=\"form-label\">Book author</label>\n            <input type=\"text\" className=\"form-control\" id=\"inputBookAuthor\" \n              name=\"author\" value={formState.author} onChange={handleInputChange} />\n          </div> */}\n\n          {/* Text */}\n          <div className=\"mb-3\">\n            <label for=\"inputText\" className=\"form-label\">Post</label>\n            <textarea className=\"form-control\" id=\"inputText\" rows=\"10\" \n              name=\"postBody\" value={formState.postBody} onChange={handleInputChange} ></textarea>\n          </div>\n\n          {/* Submit button */}\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Import components\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport User from \"./pages/User\";\nimport Posts from \"./pages/Posts\";\nimport PostSingle from './pages/PostSingle';\nimport PostForm from \"./pages/PostForm\";\n// import Footer from \"./components/Footer\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nexport default function App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Navbar />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/me\" element={<User />} />\n            <Route path=\"/user/:userId\" element={<User />} />\n            <Route path=\"/posts\" element={<Posts />} />\n            <Route path=\"/posts/:postId\" element={<PostSingle />} />\n            <Route path=\"/create\" element={<PostForm />} />\n          </Routes>\n        {/* <Footer loggedIn={loggedIn} /> */}\n      </Router>\n    </ApolloProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap/dist/js/bootstrap\";\n\n// React v17:\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// React v18 (default):\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function to log results (for example: reportWebVitals(console.log)) or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}